import csv
import h5py
import matplotlib.animation as animation
import numpy as np
from os import listdir, remove, mkdir
from os.path import isfile, join, isdir
from pylab import *
import scipy.misc
from sklearn.cross_validation import train_test_split
import tensorflow as tf
import socket
import sys
import time

def find_data_shape(path_data):
    """
    Reads in one piece of data to find out number of channels.
    INPUT:
    path_data - (string) path of data
    """
    statement = ''
    dir_data = listdir(path_data)
    matrix_size = 0
    num_channels = 0
    # Trying to look into each patient folder.
    for folder_data in dir_data:
        path_patient = join(path_data, folder_data)
        if not isdir(path_patient):
            continue
        dir_file = listdir(path_patient)
        # Trying to look at each image file.
        for name_file in dir_file:
            if name_file[-3:] != '.h5':
                continue
            path_file = join(path_patient, name_file)
            try:
                with h5py.File(path_file) as hf:
                    img = np.array(hf.get('data'))
                    matrix_size = img.shape[0]
                    num_channels = img.shape[2]
            except:
                statement += path_file + ' is not valid.\n'
            if matrix_size != 0:
                break
        if matrix_size != 0:
            break
    if matrix_size == 0:
        statement += "Something went wrong in finding out img dimensions.\n"
    sys.stdout.write(statement)
    return matrix_size, num_channels
